@page "/productList"
@using BlazorApp.Client.Services;
@using Microsoft.AspNetCore.Authorization;
@layout MainLayout
@inject IUserProductService userProductService
@inject NavigationManager Nav
@attribute [Authorize(Roles = "Admin")]

<h3>Product List</h3>

@if (products != null)
{
    <table class="table">

        <tr>

            <th>Product Name</th>
            <th>Product Type</th>
            <th></th>
        </tr>
        @foreach (var prod in products)
        {
            <tr>

                <td>@prod.productName</td>
                <td>@prod.productType</td>
                <td>
                    <a href="@($"editformprod/{prod.productId}")" class="btn btn-primary btn-sm active" role="button" aria-pressed="true">Edit</a>
                    <a href="@($"deleteProd/{prod.productId}")" class="btn btn-danger btn-sm active" role="button" aria-pressed="true">Delete</a>
                </td>
            </tr>
        }
    </table>
    //<a href="/productForm" onsubmit="" class="btn btn-outline-secondary">Add New Product</a>
    <button class="btn btn-primary" @onclick=goToAddProduct>Add New Product</button>
}
else
{
    <div class="d-flex justify-content-center">
        <Spinner Type="SpinnerType.Border" />
    </div>
}

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    List<Product> products;


    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthState).User;
        if (user!.Identity!.IsAuthenticated)
        {
            products = await userProductService.GetAllUsersProd();


        }
        else
        {


            await base.OnInitializedAsync();
        }
    }

    public void goToAddProduct()
    {
        Nav.NavigateTo("/productAddForm");
    }

}
